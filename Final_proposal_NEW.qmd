---
title: "Car Crashes in New York City"
author: "Sawyer Cremer, Sophie Chikhladze, Adarsh Gadepalli, Rahul Prakash"
tbl-cap-location: top
format:
  pdf:
    toc: true
    toc-depth: 3
---

{{< pagebreak >}}

# Introduction

1.3 million people die each year as a result of road traffic crashes, and between 20 and 50 million people every year suffer non-fatal injuries resulting from car accidents. Other than the millions of lives lost, the U.S. Department of Transportation's most recent estimate of the annual economic cost of crashes is \$340 billion. This is an issue affecting virtually every country in the world, including the United States. In New York City, New York, the New York Police Department is required to be fill out a report for every collision where someone is injured or killed, or where there is at least \$1000 worth of damage. We decided to investigate this dataset and ask questions about which zip codes or boroughs have the most car crashes and why, which days of week and hours are more accident-prone, does weather have an effect on the number of accidents in a day, and more!

# Primary Dataset

The Motor Vehicle Collisions dataset contains information about car crashes in NYC from the years 2016-2023. It contains information from all police reported motor vehicle collisions in NYC. We accessed the dataset from data.gov, provided by the City of New York. Each entry represents a car crash that ocurred in New York City. The dataset contains 28 columns that describe a variety of data, including time of accident, accident severity(deaths/injuries), pinpointed locations (neighborhoods/streets), causes for the accident, and vehicle type. Using this data, we hope to analyze and identify chronological and geographical patterns in New York City to pinpoint high-risk environments and circumstances. We are assuming that the data is continuous in terms of time, and that the specific time stamps and event details are accurate. Every plot in this document employs the primary data set, unless specified otherwise.

```{r Setup, echo = FALSE}
# KEEP THIS!
knitr::opts_chunk$set(echo = FALSE, warning = FALSE, message = FALSE, fig.width = 8, fig.height = 5)

# Sophie: 
knitr::opts_knit$set(root.dir = "/Users/sophiochikhladze/Desktop/Stat_405/Stat405_Data")

# Sawyer: 
#knitr::opts_knit$set(root.dir = "/Users/danielcufino/Desktop/STAT 405")

# Adarsh:
#knitr::opts_knit$set(root.dir = "")

# Rahul:
#knitr::opts_knit$set(root.dir = "")
```

```{r Load Dataset}
library(stringr)
options(stringsAsFactors = FALSE)
nyc_crashes <- read.csv("Motor_Vehicle_Collisions_-_Crashes.csv")
nyc_crashes$CRASH.DATE <- as.Date(nyc_crashes$CRASH.DATE,format = "%m/%d/%Y")
#nyc_crashes$CRASH.DATE <- format(as.Date(nyc_crashes$CRASH.DATE, format = "%m/%d/%Y"), "%Y-%m-%d")
colnames(nyc_crashes) <- str_replace_all(colnames(nyc_crashes), "\\.", "_")
library(tidyverse)
library(grid)
library(gridExtra)
library(RSQLite)
dcon <- dbConnect(SQLite(), dbname = "crashes.db")
#dbWriteTable(dcon, "nyc_crashes", nyc_crashes, overwrite = TRUE)
#dbListFields(dcon, "nyc_crashes") 

```

{{< pagebreak >}}

# Plots

## Number of Car Crashes over Time

First, we decided to plot a time series of the number of car crashes each day starting from 2012 up until 2023. Each point represents the total number of crashes that occurred on each day, plotted chronologically.

```{r Crashes Time Series,fig.cap="Number of Car Crashes over Time"}
#nyc_crashes$CRASH.DATE <- as.Date(nyc_crashes$CRASH.DATE,format = "%m/%d/%Y")

#dates <- nyc_crashes %>%
#  filter(!is.na(CRASH.DATE)) %>%
#  group_by(CRASH.DATE) %>%
#  summarise(Count = n()) %>%
#  ungroup()
res <- dbSendQuery(conn = dcon, "
SELECT CRASH_DATE, COUNT(*) AS Count
FROM nyc_crashes
WHERE CRASH_DATE IS NOT NULL
GROUP BY CRASH_DATE;
")
dates <- dbFetch(res, -1)
dbClearResult(res)
dates$CRASH_DATE <- as.Date(dates$CRASH_DATE)

ggplot(dates, aes(x = CRASH_DATE, y = Count)) +
  geom_line(color = "royalblue") +
  labs(x = "Date",
       y = "Number of Car Crashes",
       title = "Number of Car Crashes in NYC over Time") +
  theme(
    axis.text.x = element_text(angle = 45, hjust = 1), 
     plot.title = element_text(hjust = 0.5)
  ) +
  scale_x_date(date_labels = "%Y", breaks = seq(min(dates$CRASH_DATE), max(dates$CRASH_DATE), by = "1 year"))

```

Looking at the number of crashes over time, from 2012 to 2023, we can see that the number of crashes remained fairly consistent from 2012 to the beginning of 2020, with certain exceptions like big spikes or drops. Until 2020, there is no year with an exceptionally low or high number of crashes. However, we see a clear change in the number of crashes in the beginning of 2020, which can be interpreted as the effects of COVID-19 as that is roughly the date it started. Less people had to go to work, school became virtual, and therefore less people were driving, leading to a lowered number of car crashes per day. We could also further study the exact dates of this drop versus when the lockdown started.

{{< pagebreak >}}

## Number of Car Crashes and Deaths per Borough

For this plot, we grouped the data by 5 boroughs of New York City: Bronx, Brooklyn, Manhattan, Queens, and Staten Island. First, we calculated the total number of car crashes in each borough, and plotted it in tens of thousands since there was a large amount. Then, we wanted to see if the number of casualties in each borough was proportional to the number of car crashes. Therefore, we calculated the total number of deaths from car accidents per borough and plotted that beside the number of car crashes.

```{r Number of Car Crashes and Deaths per Borough, fig.cap="Number of Car Crashes and Deaths per Borough"}
#dead_boroughs <- factor(nyc_crashes$BOROUGH[nyc_crashes$NUMBER.OF.PERSONS.KILLED > 0 & nyc_crashes$BOROUGH!=""])
#boroughs <- factor(nyc_crashes$BOROUGH[nyc_crashes$BOROUGH!=""])
#num_crashes <- as.numeric(table(boroughs)) / 10000
#num_deaths <- as.numeric(table(dead_boroughs))
#y_ticks <- seq(0, 56, by = 8)
#par(mgp = c(1.8, 0.2, 0),
#    tck = 0.02)

# borough_dist <- data.frame(
#   Borough = c("Bronx", "Brooklyn", "Manhattan", "Queens", "Staten Island"),
#   Num_Crashes = num_crashes,
#   Num_Deaths = num_deaths
# )

res <- dbSendQuery(conn = dcon, "
SELECT
  BOROUGH AS Borough,
  COUNT(*) / 10000 AS Num_Crashes,
  SUM(CASE WHEN NUMBER_OF_PERSONS_KILLED > 0 THEN 1 ELSE 0 END) AS Num_Deaths
FROM nyc_crashes
WHERE BOROUGH IS NOT NULL
GROUP BY BOROUGH;
")
dead_b <- dbFetch(res, -1)
dbClearResult(res)
# dead_boroughs <- factor(dead_b$Borough[dead_b$Num_Deaths > 0])
# boroughs <- factor(dead_b$Borough)

y_ticks <- seq(0, max(dead_b$Num_Deaths), by = 8)

borough_dist <- data.frame(
  Borough = dead_b$Borough,
  Num_Crashes = dead_b$Num_Crashes,
  Num_Deaths = dead_b$Num_Deaths
)

par(mgp = c(1.8, 0.2, 0), tck = 0.02)

layout(matrix(c(1, 2), nrow = 1, byrow = TRUE))
crashes <- ggplot(borough_dist, aes(x = Borough, y = Num_Crashes)) +
  geom_bar(stat = "identity", fill = "lightblue") +
  labs(x = NULL, y = "Number of Crashes detected") +
  theme_minimal() +
  theme(axis.text.x = element_text(angle = 45, hjust = 1),  plot.title = element_text(hjust = 0.5)) +
  ylim(0, 46) +
  ggtitle("Number of Car Crashes \nper Borough, in tens of thousands")

# Create a bar plot for the number of deaths
deaths<- ggplot(borough_dist, aes(x = Borough, y = Num_Deaths)) +
  geom_bar(stat = "identity", fill = "royalblue") +
  labs(x = NULL, y = "Number of Deaths") +
  theme_minimal() +
  theme(axis.text.x = element_text(angle = 45, hjust = 1),  plot.title = element_text(hjust = 0.5)) +
  ylim(0, 600) +
  ggtitle("Number of Deaths from \nCar Crashes per Borough")

grid.arrange(crashes, deaths, ncol = 2)
```

From the left plot, we can see that Brooklyn has the highest amount of crashes, followed by Queens and Manhattan. Staten Island has the lowest number of crashes recorded, by a significant amount. Despite the fact that Staten Island has the highest number of cars per household, it is sensible that the rest of the boroughs have more car accidents, since there is more general traffic there. Furthermore, if we compare the number of crashes per borough to the number of casualties per borough, We can see that the proportions of deaths are similar to the number of accidents, except for Manhattan, which is slightly lower.

{{< pagebreak >}}

## Average Accidents per Day per Season

Next, we asked ourselves - is an accident more or less likely to occur during a specific season? For this, we turned each date into a season and calculated the number of car crashes per day for each season. The, we plotted 4 boxplots to represent each season portraying the number of car crashes per day.

```{r Average Accidents per Day per Season, fig.cap="Average Accidents per Day per Season"}
# conv_season <- function(date) {
#   m <- as.numeric(format(date, "%m"))
#   if(m == 12 || m == 1 || m == 2){
#     return("Winter")
#   }else if(m == 3 || m == 4 || m == 5){
#     return("Spring")
#   }else if(m == 6 || m == 7 || m == 8){
#     return("Summer")
#   }else{
#     return("Fall")
#   }
# }
# daily_counts <- nyc_crashes %>%
#   group_by(CRASH.DATE) %>%
#   summarize(Count = n()) %>%
#   rowwise() %>%
#   mutate(Season = conv_season(CRASH.DATE)) %>%
#   ungroup()


daily_counts <- dbGetQuery(dcon, "
SELECT
  CRASH_DATE,
  COUNT(*) AS Count
FROM nyc_crashes
GROUP BY CRASH_DATE
")


daily_counts <- dbGetQuery(dcon, "
SELECT
  CRASH_DATE,
  Count,
  CASE
    WHEN strftime('%m', CRASH_DATE) IN ('12', '01', '02') THEN 'Winter'
    WHEN strftime('%m', CRASH_DATE) IN ('03', '04', '05') THEN 'Spring'
    WHEN strftime('%m', CRASH_DATE) IN ('06', '07', '08') THEN 'Summer'
    ELSE 'Fall'
  END AS Season
FROM (
  SELECT
    CRASH_DATE,
    COUNT(*) AS Count
  FROM nyc_crashes
  GROUP BY CRASH_DATE
)
")


ggplot(daily_counts, aes(x = Season, y = Count, fill = Season)) +
  stat_boxplot(geom = "errorbar",
               width = 0.15) + 
  geom_boxplot() +
  labs(x = "Season", y = "Number of Accidents per Day", 
       title = "Average Daily Accidents per Season") +
  ylim(0, 1300) +
  scale_fill_manual(values = c("Winter" = "chocolate2", 
                                "Spring" = "mistyrose", 
                                "Summer" = "khaki1", 
                                "Fall" = "slategray1")) +
  scale_y_continuous(breaks = seq(from = 0, to = 1200, by = 300)) +
  theme(axis.text.x = element_text(angle = 45, hjust = 1),  plot.title = element_text(hjust = 0.5))

```

As we can see, there is a relatively similar amount of car crashes across all the seasons, suggesting that the season does not significantly affect the likelihood of crashes occurring. One interesting point is that there is a much larger variance and spread of car crashes per day in the fall while there is a significantly smaller variance of car crashes per day in the summer. There is also an outlier in the Winter, where over 1200 crashes happened on one day. However, this is just an outlier since the median number of crashes in Winter is slightly lower than the median number of crashes in the Summer and Fall.

{{< pagebreak >}}

## Regression over Total Number of Car Crashes vs Precipitation per Day in NYC

This is a linear regression over a plot of car crashes vs precipitation in New York City, New York. Displayed in the table below are the intercept and the coefficient for precipitation.

```{r Regression}
#| tbl-cap: "Regression over Total Number of Car Crashes vs Precipitation per Day in NYC"
library(flextable)
weatherdata<-read.csv("New York City,USA 2020-09-01 to 2022-12-31.csv")

merged_data3 <- merge(daily_counts, weatherdata, by.x="CRASH_DATE", by.y="datetime")
colnames(merged_data3)[13] = "Precipitation"

#dbWriteTable(dcon, "merged_data3", merged_data3, overwrite = TRUE)

model <- lm(Count ~ Precipitation, data = merged_data3)
as_flextable(model,  col_keys = c("Intercept", "Precipitation \n Coefficient"))
```

The plot depicting the relationship, as well as further analysis, is on the next page.

{{< pagebreak >}}

```{r Regression plot, fig.cap="Total Number of Car Crashes vs Precipitation per Day in NYC", fig.width = 6, fig.height = 4}
plot(merged_data3$Precipitation, merged_data3$Count,
     xlab="Precipitation", ylab="Number of Crashes",
     main="Total Number of Car Crashes vs Precipitation per Day in NYC", yaxt = 'n')
axis(2, las = 2)
abline(model, col="red")
#mtext(text = "Data: Motor Vehicle Collisions in New York City, New York and Weather in New York City", side = 1, line = 4, adj = 1)
```

The summary of the regression indicates that as there is a one unit increase in precipitation, the average number of car crashes increases by 0.04545. The intercept shows that the estimated average number of car crashes on a day with no precipitation in NYC is 294.69. The precipitation coefficient is not statistically significant because of its high p-value of 0.876, and the t-value of 0.156 further reinforces the lack of statistical significance in the coefficient.

{{< pagebreak >}}

## Number of Casualties By Weather Conditions and Number of Cars Involved

The following is a series of bar plots, plotting the number of casualties caused by vehicle crashes to weather conditions during the times of those accidents. Each plot represents the data from car crashes involving 3,4, and 5 cars. 

```{r Casualties by weather + number of cars, fig.cap="Number of Casualties By Weather Conditions and Number of Cars Involved"}
# merged_data <- merge(nyc_crashes, weatherdata, by.x="CRASH_DATE", by.y="datetime")
# merged_data$CRASH_DATE <- format(as.Date(merged_data$CRASH_DATE, format = "%m/%d/%Y"), "%Y-%m-%d")
# dbWriteTable(dcon, "merged_data", merged_data, overwrite = TRUE)
# merged_data$num_cars = (merged_data$VEHICLE.TYPE.CODE.1 != "") +
#                       (merged_data$VEHICLE.TYPE.CODE.2 != "") +
#                       (merged_data$VEHICLE.TYPE.CODE.3 != "") +
#                       (merged_data$VEHICLE.TYPE.CODE.4 != "") +
#                       (merged_data$VEHICLE.TYPE.CODE.5 != "")
# 
# merged_data <- merged_data %>% filter(num_cars %in% c(3, 4, 5))
# merged_data$icon[merged_data$icon == "clear-day"] <- "clear"
# merged_data$icon[merged_data$icon == "partly-cloudy-day"] <- "cloudy"
update_clear <- dbGetQuery(dcon, "
UPDATE merged_data
SET icon = 'clear'
WHERE icon = 'clear-day';")
update_cloudy <- dbGetQuery(dcon, "
UPDATE merged_data
SET icon = 'cloudy'
WHERE icon = 'partly-cloudy-day';
")
weather_crashes <- dbGetQuery(dcon, "
SELECT 
CRASH_DATE,
  NUMBER_OF_PERSONS_KILLED,
  NUMBER_OF_PERSONS_INJURED,
  icon,
  num_cars
  FROM
  (SELECT
  CRASH_DATE,
  NUMBER_OF_PERSONS_KILLED,
  NUMBER_OF_PERSONS_INJURED,
  icon,
  (CASE WHEN VEHICLE_TYPE_CODE_1 <> '' THEN 1 ELSE 0 END) +
    (CASE WHEN VEHICLE_TYPE_CODE_2 <> '' THEN 1 ELSE 0 END) +
    (CASE WHEN VEHICLE_TYPE_CODE_3 <> '' THEN 1 ELSE 0 END) +
    (CASE WHEN VEHICLE_TYPE_CODE_4 <> '' THEN 1 ELSE 0 END) +
    (CASE WHEN VEHICLE_TYPE_CODE_5 <> '' THEN 1 ELSE 0 END)
    as num_cars
FROM merged_data)
WHERE  num_cars > 2;
")

ggplot(data = weather_crashes, aes(x = as.factor(icon),
                               y = NUMBER_OF_PERSONS_KILLED + NUMBER_OF_PERSONS_INJURED, 
                               fill = as.factor(icon))) +
  geom_bar(stat = "identity") +  
  labs(x = "Number of Cars Involved",
       y = "Number of Casualties",
       title = "Number of Casualties by Weather Conditions and Number of Cars Involved") +
  facet_wrap(~ num_cars, scales = "free_y") +
  theme(
    axis.text.x = element_text(angle = 45, hjust = 1),  plot.title = element_text(hjust = 0.5)
  )  +
  scale_fill_manual(values = c("gold", "paleturquoise", "navyblue", "thistle")) +
  guides(fill = "none") 
```

The plots display a large plurality of crashes occurring during rainy weather, and a noticeable minority of crashes occurring during snowy weather, which most likely is due to the fact that it doesn't snow for the majority of the year but may also be because many people aren't on the roads during snowy weather. Furthermore, each of the bar plots maintains a relatively consistent casualty distribution across the weather condition categories, with the exception of cloudy weather seemingly having a higher proportion of casualties for 3 car accidents. We also note the casualty count differences across the plots, as the total casualty count is much greater for 3 car accidents, then 4 car, then 5 car.

{{< pagebreak >}}

## Number of Car Crashes Over/Under average per Day of Week

The plot below demonstrates a heat map of the number of crashes over/under average per day of week per borough. The numbers represent daily averages for each borough subtracted from the number of crashes per day. This is to demonstrate how the number of crashes varies per day of week. Green represents below average number of crashes, yellow represents an average number of crashes, and orange and red represent an above average number of crashes.

```{r Car Crashes Over/Under average per Day of Week, fig.cap="Number of Car Crashes Over/Under average per Day of Week"}
# library(ggplot2)
# library(viridis)
# #nyc_crashes$CRASH_DATE <- as.Date(nyc_crashes$CRASH_DATE,format = "%Y/%m/%d")
# 
# 
# nyc_crashes <- nyc_crashes %>%
#   mutate(WEEKDAY = weekdays(CRASH_DATE)) %>%
#   filter(BOROUGH!="")
# 
# borough_crash_counts <- nyc_crashes %>%
#   group_by(BOROUGH, WEEKDAY) %>%
#   summarise(Count = n())
# 
# colnames(borough_crash_counts) <- c("Borough", "Weekday", "Count")
# 
# avg_borough <- borough_crash_counts %>%
#   group_by(Borough) %>%
#   summarise(Average = mean(Count))
# 
# borough_crash_counts <- borough_crash_counts %>%
#   left_join(avg_borough, by = "Borough") %>%
#   mutate(Count_avg = Count - Average) %>%
#   select(Borough, Weekday, Count, Count_avg)
# 
# weekday_order <- c("Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday")
# 
# ggplot(borough_crash_counts, aes(x = Borough, y = factor(Weekday, levels = rev(weekday_order)), fill = Count_avg)) +
#   geom_tile(color = "white", size = 0.1) +
#   coord_equal() +
#   labs(
#     x = "Borough",
#     y = "Day of Week",
#     title = "Number of Crashes Over/Under Average\nper Day of Week in Each Borough",
# #    caption = "Data: Motor Vehicle Collisions in New York City, New York",
#     fill = "Number of\n Accidents"
#   ) +
#   theme(
#     axis.text.x = element_text(angle = 45, hjust = 1) 
#   ) +
#   scale_fill_gradient2(low = "green3", mid = "gold", high = "red") +
#   theme(plot.title = element_text(hjust = 0.5)) 

library(ggplot2)
library(viridis)

borough_crash_counts <- dbGetQuery(dcon, "
SELECT BOROUGH, strftime('%w', CRASH_DATE) as Weekday_Num, 
       COUNT(*) as Count
FROM nyc_crashes
WHERE BOROUGH != ''
GROUP BY BOROUGH, strftime('%w', CRASH_DATE);
")

avg_borough <- dbGetQuery(dcon,  "
SELECT BOROUGH, AVG(Count) as Average
FROM (SELECT BOROUGH, strftime('%w', CRASH_DATE) as Weekday_Num, 
             COUNT(*) as Count
      FROM nyc_crashes
      WHERE BOROUGH != ''
      GROUP BY BOROUGH, strftime('%w', CRASH_DATE))
GROUP BY BOROUGH;
")

borough_crash_counts <- left_join(borough_crash_counts, avg_borough, by = "BOROUGH")
borough_crash_counts <- borough_crash_counts %>%
  mutate(Count_avg = Count - Average)

weekday_order <- c("Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday")

ggplot(borough_crash_counts, aes(x = BOROUGH, y = factor(Weekday_Num, levels = rev(0:6), labels=rev(weekday_order)), fill = Count_avg)) +
  geom_tile(color = "white", size = 0.1) +
  coord_equal() +
  labs(
    x = "Borough",
    y = "Day of Week",
    title = "Number of Crashes Over/Under Average\nper Day of Week in Each Borough",
    fill = "Number of\n Accidents"
  ) +
  theme(
    axis.text.x = element_text(angle = 45, hjust = 1),  plot.title = element_text(hjust = 0.5)
  ) +
  scale_fill_gradient2(low = "green3", mid = "gold", high = "red") +
  theme(plot.title = element_text(hjust = 0.5))

```

The heat map shows that in all boroughs, the highest number of crashes occurs on Fridays. The lowest in all boroughs occurs on Sundays. In general, a higher number of crashes happen on weekdays, which makes sense since a lot of New York City residents who work drive to and from work on weekdays. The plot also demonstrates variation in car crashes per borough. Staten Island has the least variation, but also has the least number of crashes as we saw in Figure 2. Manhattan has the highest variation, followed by Brooklyn.

{{< pagebreak >}}

## Number of Car Crashes per ZIP code

The plot below demonstrates the number of car crashes per ZIP code in New York City, New York. The plot displays more and less accident-prone zones. As demonstrated in the legend, light yellow is the lower number of crashes, while dark red is the higher number of crashes. The ZIP codes that are gray had no data - indicating that either no car crashes happened in that zone, or none that were recorded. The x axis in the plot represents longitude and the y axis represents latitude.

```{r Car Crashes per ZIP code, fig.cap="Number of Car Crashes per ZIP code"}
# library(tidyverse)
# library(sf)
# 
# nyc_crashes$ZIP.CODE <- as.character(nyc_crashes$ZIP.CODE)
# nyc_crashes$ZIP.CODE <- sub("\\.0$", "", nyc_crashes$ZIP.CODE)
# zip_counts <- nyc_crashes %>%
# group_by(ZIP.CODE) %>%
# summarize(count = n())
# nyc_zip_boundaries <- st_read("zipcodes.geojson", quiet = TRUE)
# merged_zip_data <- left_join(nyc_zip_boundaries, zip_counts, by = c("ZIPCODE" = "ZIP.CODE"))
# ggplot(merged_zip_data) +
#   geom_sf(aes(fill = count)) +
#   scale_fill_gradient(low = "lightyellow", high = "darkred", 
#                       name = "Count of Car Crashes") +
#   ggtitle("Car Crashes by NYC ZIP Code") +
#   labs(x = "Longitude", y = "Latitude", 
#  #      caption = "Data: Motor Vehicle Collisions in New York City, New York"
#  ) +
#   theme_minimal()

library(tidyverse)
library(sf)
library(RSQLite)

dcon <- dbConnect(SQLite(), dbname = "crashes.db")

zip_counts <- dbGetQuery(dcon, "
SELECT ZIP_CODE, COUNT(*) as count
FROM nyc_crashes
WHERE ZIP_CODE != ''
GROUP BY ZIP_CODE;
")

nyc_zip_boundaries <- st_read("zipcodes.geojson", quiet = TRUE)

zip_counts$ZIP_CODE <- as.character(zip_counts$ZIP_CODE)
merged_zip_data <- left_join(nyc_zip_boundaries, zip_counts, by = c("ZIPCODE" = "ZIP_CODE"))


ggplot(merged_zip_data) +
  geom_sf(aes(fill = count)) +
  scale_fill_gradient(low = "lightyellow", high = "darkred", name = "Count of Car Crashes") +
  ggtitle("Car Crashes by NYC ZIP Code") +
  labs(x = "Longitude", y = "Latitude") +
  theme_minimal() + 
  theme(plot.title = element_text(hjust = 0.5))


```

From the plot, it is visible that some of these darker regions include areas where major bridges lead into and out of Manhattan to Queens and Brooklyn, which might be a factor for why there is a high volume of crashes in these areas. The lighter shaded ZIP codes on the map signify regions with fewer crashes. Generally, there are less crashes in the borough of Staten Island based on this graphic, which might be due to a lower traffic and population. The gray block in Manhattan is central park, so it is logical that no crashes occurred in that ZIP code.

{{< pagebreak >}}

## Number of Car Crashes by Hour of Day

The polar bar chart shows the number of car crashes in New York City by hour of the day. Each bar segment corresponds to an hour, labeled from 12:00AM to 11:00PM. A longer bar indicates a higher number of crashes occurred during that hour.

```{r Car Crashes by Hour of Day, fig.cap="Number of Car Crashes by Hour of Day"}
library(dplyr)
library(ggplot2)
library(lubridate)

nyc_crashes$Hour <- hour(hm(nyc_crashes$CRASH_TIME))

hourly_crashes <- nyc_crashes %>%
  group_by(Hour) %>%
  summarise(Count = n()) %>%
  arrange(Hour)

# hourly_crashes <- dbGetQuery(dcon, "SELECT
#     strftime('%H', CRASH_TIME) AS Hour,
#     COUNT(*) AS Count
# FROM
#     nyc_crashes
# GROUP BY
#     Hour
# ORDER BY
#     Hour;")

ggplot(hourly_crashes, aes(x = factor(Hour), y = Count)) +
  geom_bar(stat = "identity", fill = "goldenrod", show.legend = FALSE) +
  coord_polar(start = 0) +
  labs(
    title = "Number of Car Crashes by Hour of Day",
#    caption = "Data: Motor Vehicle Collisions in New York City, New York",
    x = "",
    y = ""
  ) +
  theme_minimal() +
  scale_x_discrete(labels = paste0(c(12, 1:11, 12, 1:11), ":00", c(rep(" AM", 12), rep(" PM", 12) ))) + 
  theme(axis.text.y = element_blank(), 
        axis.ticks.y = element_blank(),
        axis.text.x = element_text(size = 7),
        plot.title = element_text(hjust = 0.5)) 
```

There is a substantial increase in the amount of crashes during the late afternoon hours known as "rush hour", peaking around 4:00 PM. This is because there is increased traffic as people commute back from work. The number of crashes decreases significantly in the early morning hours, showing that there are fewer incidents when there are fewer vehicles on the road.

{{< pagebreak >}}

## Number of Car Crashes by Type of Vehicle per Year

Below is a histogram of accidents by year, with each bar filled based on the top 3 types of vehicles involved in those accidents. These three categories are passenger vehicle, depicted in green, station wagon or sport utility vehicle, depicted in turquoise, and finally taxi, depicted in magenta. The x axis represents the year and y axis represents the number of accidents that occurred.

```{r Crashes by Vehicle Type per Year, fig.cap="Number of Car Crashes by Type of Vehicle per Year"}
library(DBI)
library(RSQLite)
library(ggplot2)
library(lubridate)

query <- dbExecute(dcon, "
UPDATE nyc_crashes
SET VEHICLE_TYPE_CODE_1 = CASE 
    WHEN VEHICLE_TYPE_CODE_1 IN ('4 dr sedan', '2 dr sedan', 'SEDAN', 'sedan', 'PASSENGER VEHICLE', 'Sedan', 'Passenger Vehicle') THEN 'Passenger Vehicle'
    WHEN VEHICLE_TYPE_CODE_1 IN ('SPORT UTILITY / STATION WAGON', 'Station Wagon/Sport Utility Vehicle') THEN 'Station Wagon/Sport Utility Vehicle'
    WHEN VEHICLE_TYPE_CODE_1 IN ('TAXI', 'Taxi') THEN 'Taxi'
    ELSE 'Other'
END
")

type_of_car_accidents <- dbGetQuery(dcon, "
SELECT strftime('%Y', CRASH_DATE) as Year, VEHICLE_TYPE_CODE_1, COUNT(*) as Freq 
FROM nyc_crashes 
WHERE VEHICLE_TYPE_CODE_1 IN ('Passenger Vehicle', 'Station Wagon/Sport Utility Vehicle', 'Taxi', 'Other') 
GROUP BY Year, VEHICLE_TYPE_CODE_1
")

ggplot(type_of_car_accidents, aes(x = Year, y = Freq, fill = VEHICLE_TYPE_CODE_1)) +
  geom_bar(stat = "identity", position = "stack") +
  labs(
    title = "Number of Car Accidents by Year and Type of Car",
    subtitle = "3 Most Common Car Types",
    x = "Year",
    y = "Number of Accidents",
    fill = "Type of Car"
  ) +
  theme_minimal() + 
  theme(plot.title = element_text(hjust = 0.5), plot.subtitle = element_text(hjust = 0.5))


```

As we can see, there is a relatively large portion of each bar designated as 'Other', displaying the widespread variety of vehicles in accidents. Besides that, the next most common vehicle is a passenger vehicle. After that, the most prevalent was a station wagon or a sport utility vehicle. The last, much smaller category included in the plot is Taxi. This order remains the same throughout all years. Furthermore, we see a sharp decrease in the number of accidents in 2020, most likely due to the onset of COVID, but what's interesting to note is that accident numbers have not returned to what they once were post COVID. We can also see that the relative proportion of accidents with passenger vehicles, station wagons, and taxi's remain similar throughout the years. {{< pagebreak >}}

## Density of Casualties by Contributing Factor

This is a density plot visualizing total casualties for all accidents by contributing factor in our data set, where a casualty is either a person injured or a person killed. The plot visualizes the probability density function (pdf) of total casualties of car crashes in NYC. It shows the distribution of car crash casualties in NYC for 4 most common contributing factors. This plot gives us insight into how different contributing factors can influence the number of casualties.

```{r Density of Casualties by Contributing Factor, fig.cap="Number of Car Crashes by Type of Vehicle per Year"}
# 
# nyc_crashes_filtered <- nyc_crashes %>%
#   filter(CONTRIBUTING.FACTOR.VEHICLE.1 != "Unspecified")
# 
# top_5_factors <- nyc_crashes_filtered %>%
#   count(CONTRIBUTING.FACTOR.VEHICLE.1) %>%
#   arrange(desc(n)) %>%
#   head(4)
# 
# subset_data <- nyc_crashes_filtered %>%
#   filter(CONTRIBUTING.FACTOR.VEHICLE.1 %in% top_5_factors$CONTRIBUTING.FACTOR.VEHICLE.1)
# 
# desired_order <- rev(top_5_factors$CONTRIBUTING.FACTOR.VEHICLE.1)
# 
# subset_data <- subset_data %>%
#   mutate(CONTRIBUTING.FACTOR.VEHICLE.1 = factor(CONTRIBUTING.FACTOR.VEHICLE.1, levels = desired_order))
# ggplot(subset_data, aes(x = NUMBER.OF.PERSONS.KILLED + NUMBER.OF.PERSONS.INJURED, colour = CONTRIBUTING.FACTOR.VEHICLE.1)) +
#   geom_density(fill = NA, size=0.6, adjust = 3) +  
#   labs(title = "Density Plot of Number of Casualties",
#        subtitle = "Top 4 Contributing Factors",
# #       caption = "Data: Motor Vehicle Collisions in New York City, New York",
#        fill = "Contributing Factor",
#        x = "Number of Casualties",
#        y = "Density") +
#   scale_x_continuous(
#     labels = c( "0", "1", "2", "3", "4", "5")  
#   ) +
#   theme_minimal() +  xlim(c(-0.5,5.5))+ ylim(c(0, 5)) +
#  scale_colour_manual(values = c("purple3", "red2", "royalblue", "green3")) +
#   theme(plot.title = element_text(hjust = 0.5), plot.subtitle = element_text(hjust = 0.5), 
#         legend.position = c(0.95, 0.95), legend.justification = c(1, 1)) +
#   guides(colour = guide_legend(title = "Contributing Factor"))

library(DBI)
library(RSQLite)
library(ggplot2)
library(lubridate)

dcon <- dbConnect(SQLite(), dbname = "crashes.db")

top_4_factors <- dbGetQuery(dcon,  "
SELECT CONTRIBUTING_FACTOR_VEHICLE_1, 
       SUM(NUMBER_OF_PERSONS_KILLED + NUMBER_OF_PERSONS_INJURED) as Casualties
FROM nyc_crashes
WHERE CONTRIBUTING_FACTOR_VEHICLE_1 != 'Unspecified'
GROUP BY CONTRIBUTING_FACTOR_VEHICLE_1
ORDER BY Casualties DESC
LIMIT 4
")

contributing_factors <- paste0("'", paste(top_4_factors$CONTRIBUTING_FACTOR_VEHICLE_1, collapse="','"), "'")

subset_data <- dbGetQuery(dcon, sprintf("
SELECT CONTRIBUTING_FACTOR_VEHICLE_1, 
       NUMBER_OF_PERSONS_KILLED + NUMBER_OF_PERSONS_INJURED as Casualties
FROM nyc_crashes
WHERE CONTRIBUTING_FACTOR_VEHICLE_1 IN (%s)
", contributing_factors))

subset_data$CONTRIBUTING_FACTOR_VEHICLE_1 <- factor(subset_data$CONTRIBUTING_FACTOR_VEHICLE_1, levels = rev(top_4_factors$CONTRIBUTING_FACTOR_VEHICLE_1))

ggplot(subset_data, aes(x = Casualties, colour = CONTRIBUTING_FACTOR_VEHICLE_1)) +
  geom_density(fill = NA, size = 0.6, adjust = 3) +
  labs(title = "Density Plot of Number of Casualties",
       subtitle = "Top 4 Contributing Factors",
       fill = "Contributing Factor",
       x = "Number of Casualties",
       y = "Density") +
  scale_x_continuous(breaks = 0:5, labels = c("0", "1", "2", "3", "4", "5")) +
  theme_minimal() +
  xlim(c(-0.5, 5.5)) +
  ylim(c(0, 5)) +
  scale_colour_manual(values = c("purple3", "red2", "royalblue", "green3")) +
  theme(plot.title = element_text(hjust = 0.5), plot.subtitle = element_text(hjust = 0.5), 
        legend.position = c(0.95, 0.95), legend.justification = c(1, 1)) +
  guides(colour = guide_legend(title = "Contributing Factor"))



```

The plot shows that there is a large difference between low casualty (0 or 1) accidents caused by Failure to Yield Right of Way as compared to the rest of the contributing factors. However, for higher casualty incidents (greater than 2), this difference largely decreases and there is a relatively similar amount of high casualty accidents caused by Failure to Yield Right of Way as to caused by Driver Inattention and Distraction. This suggests that there is a much higher likelihood of a low casualty accident being caused by Failure to Yield Right of Way than a high casualty accident. Furthermore, accidents with 1 or more casualty are more likely to be caused by failure to yield, followed by driver inattention.

{{< pagebreak >}}

## Number of Crashes by Weather Conditions

The Box-Dot plot below displays the number of crashes that occur for a given day for the various categories of weather conditions. The weather conditions are listed on the x axis, while the number of car accidents is on the y axis. Each blue dot represents a day - its x coordinate is the weather that day, and the y coordinate is the number of accidents that occurred that day. The boxes show the first and third quartiles, as well as the median number of car crashes for each weather. This plot, in addition to the primary data set, utilizes the secondary data set, Weather in New York City, New York from 2020-09-01 to 2022-12-31 \[2\].

```{r Number of Crashes by Weather Conditions, fig.cap="Number of Crashes by Weather Conditions"}
update_clear <- dbGetQuery(dcon, "
UPDATE merged_data3
SET icon = 'clear'
WHERE icon = 'clear-day';")
update_cloudy <- dbGetQuery(dcon, "
UPDATE merged_data3
SET icon = 'partly cloudy'
WHERE icon = 'partly-cloudy-day';
")
weather_counts <- dbGetQuery(dcon, "
          SELECT 
          icon, 
          Count
          FROM 
          merged_data3
                             ")

ggplot(weather_counts, aes(icon, Count)) +
geom_boxplot( width = 0.97, fill = "transparent") +  
  geom_dotplot(binaxis = 'y',
               stackdir = 'center',
               dotsize = 0.22,
              stackratio = 1.4,  
               fill = "lightblue2", color = "blue3", alpha = 0.7) +
  theme(axis.text.x = element_text(angle = 65, vjust = 0.6)) +
  labs(title = "Number of Crashes vs Weather Conditions",
       subtitle = "From 09/01/2020 to 12/31/2022",
       x = "Weather Conditions",
       #caption = "Data: Motor Vehicle Collisions in New York City, New York and Weather in New York City",
       y = "Crashes per Day") +
  theme_minimal() +
  theme(plot.title = element_text(hjust = 0.5), plot.subtitle = element_text(hjust = 0.5), 
        axis.text.x = element_text(hjust = 0.5))


```

The plot shows that from 09/01/2020 to 12/31/2022, there was a majority of rainy days, followed by clear days, and partly cloudy days. This can be concluded by the number of blue dots on each section of the x axis. The median number of car accidents for a clear day is slightly higher than the number of car accidents on the rainy days. However, the rain box has two outliers, where the highest number of car accidents happened out of all days. What is quite surprising to note is that the median number of accidents on snowy days is lower than the median number of accidents on clear days, which may be the case because less people are out on the road during snowy weather. {{< pagebreak >}}

## Number of Car Crashes per Contributing Factors

For this plot, we decided to perform text mining on the Contributing Vehicle Factors. This column contained many different factors, and there was correlation between many of these factors, so in order to grasp a better picture of this variable, we decided to group them based on more broad overarching categories including: Aggressive, Distraction, Driving Error, External, Fatigue, Malfunction, Substance, and Other.

```{r}
res4 <- dbSendQuery(conn = dcon, "
SELECT
    CONTRIBUTING_FACTOR_VEHICLE_1,
    CASE
        WHEN CONTRIBUTING_FACTOR_VEHICLE_1 LIKE '%Alcohol%' OR CONTRIBUTING_FACTOR_VEHICLE_1 LIKE '%Drugs%' OR CONTRIBUTING_FACTOR_VEHICLE_1 LIKE '%Medication%' THEN 'Substance'
        WHEN CONTRIBUTING_FACTOR_VEHICLE_1 LIKE '%Aggressive%' OR CONTRIBUTING_FACTOR_VEHICLE_1 LIKE '%Vandalism%' OR CONTRIBUTING_FACTOR_VEHICLE_1 LIKE '%Unsafe%' THEN 'Aggressive'
        WHEN CONTRIBUTING_FACTOR_VEHICLE_1 LIKE '%Illnes%' OR CONTRIBUTING_FACTOR_VEHICLE_1 LIKE '%Illness%' 
          OR CONTRIBUTING_FACTOR_VEHICLE_1 LIKE '%Fatigued/Drowsy%' OR CONTRIBUTING_FACTOR_VEHICLE_1 LIKE '%Asleep%' OR CONTRIBUTING_FACTOR_VEHICLE_1 LIKE '%Consciousness%' THEN 'Fatigue'
        WHEN CONTRIBUTING_FACTOR_VEHICLE_1 LIKE '%Distraction%' OR CONTRIBUTING_FACTOR_VEHICLE_1 LIKE '%Phone%' 
          OR CONTRIBUTING_FACTOR_VEHICLE_1 LIKE '%Inattention/Distraction%' OR CONTRIBUTING_FACTOR_VEHICLE_1 LIKE '%Device%' OR CONTRIBUTING_FACTOR_VEHICLE_1 LIKE '%Reaction%'
          OR CONTRIBUTING_FACTOR_VEHICLE_1 LIKE '%Eating%' OR CONTRIBUTING_FACTOR_VEHICLE_1 LIKE '%Headphones%' OR CONTRIBUTING_FACTOR_VEHICLE_1 LIKE '%Texting%' THEN 'Distraction'
        WHEN CONTRIBUTING_FACTOR_VEHICLE_1 LIKE '%Yield%' OR CONTRIBUTING_FACTOR_VEHICLE_1 LIKE '%Backing%' 
          OR CONTRIBUTING_FACTOR_VEHICLE_1 LIKE '%Yield%' OR CONTRIBUTING_FACTOR_VEHICLE_1 LIKE '%Backing%'
          OR CONTRIBUTING_FACTOR_VEHICLE_1 LIKE '%Passing%' OR CONTRIBUTING_FACTOR_VEHICLE_1 LIKE '%Traffic%' OR CONTRIBUTING_FACTOR_VEHICLE_1 LIKE '%Turning%'
          OR CONTRIBUTING_FACTOR_VEHICLE_1 LIKE '%Following%' OR CONTRIBUTING_FACTOR_VEHICLE_1 LIKE '%Keep%' THEN 'Driving Error'
        WHEN CONTRIBUTING_FACTOR_VEHICLE_1 LIKE '%Defective%' OR CONTRIBUTING_FACTOR_VEHICLE_1 LIKE '%Tire%' 
          OR CONTRIBUTING_FACTOR_VEHICLE_1 LIKE '%Steering%' OR CONTRIBUTING_FACTOR_VEHICLE_1 LIKE '%Defects%' THEN 'Malfunction'
        WHEN CONTRIBUTING_FACTOR_VEHICLE_1 LIKE '%Animals%' OR CONTRIBUTING_FACTOR_VEHICLE_1 LIKE '%Obstruction/Debris%' 
          OR CONTRIBUTING_FACTOR_VEHICLE_1 LIKE '%Pavement%' OR CONTRIBUTING_FACTOR_VEHICLE_1 LIKE '%Obstructed/Limited%'
          OR CONTRIBUTING_FACTOR_VEHICLE_1 LIKE '%Glare%' THEN 'External'
        ELSE 'Other'
    END AS Contributing_Factor
FROM
    nyc_crashes;

")

mydf4 <- dbFetch(res4, -1)
dbClearResult(res4)

factor_frequencies <- table(mydf4$Contributing_Factor)

frequency_df <- as.data.frame(factor_frequencies)
names(frequency_df) <- c("Contributing_Factor", "Frequency")  # Rename columns



ggplot(data = frequency_df, aes(x = Contributing_Factor, y = Frequency)) +
  geom_bar(stat = "identity", fill = "skyblue") +
  xlab("Contributing Factors") +
  ylab("Frequency") +
  labs( title = "Bar Plot of Contributing Factor Frequencies") + 
   theme(plot.title = element_text(hjust = 0.5), plot.subtitle = element_text(hjust = 0.5), 
        axis.text.x = element_text(hjust = 0.5))

```

From the plot above, the "Other" category is the largest, which makes sense since the category also includes "Unspecified", and a lot of the contributing factors could not be determined. However, after that, "Distraction" is the biggest category, followed by "Driving Error". Other factors include "Aggressive", which includes behavior that is not an error or distraction but is what is commonly referred to as "road rage". Fatigue is also a big factor, followed by external. Close to this is also substance, which includes alcohol and drugs.

# Resources

1.  Primary Data Set: [Motor Vehicle Collisions in New York City, New York](https://catalog.data.gov/dataset/motor-vehicle-collisions-crashes/resource/b5a431d2-4832-43a6-9334-86b62bdb033f)

2.  Secondary Data Set: [Weather in New York City, New York from 2020-09-01 to 2022-12-31](https://www.visualcrossing.com/weather/weather-data-services/New%20York%20City,USA/metric/2019-01-01/2022-12-31)

3.  [Road Traffic Injuries](https://www.who.int/news-room/fact-sheets/detail/road-traffic-injuries) - World Health Organization
